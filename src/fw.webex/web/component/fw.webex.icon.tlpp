/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

class WebExIcon from WebExControl

    public data cIconName as character
    public data cIconType as character

    public method New(cIconName as character,cIconType as character) as object

    public method SetIconType(cIconType as character) as object
    public method SetSize(cIconSize as character) as object
    public method SetIcon(cIconName as character) as object

endclass

method New(cIconName,cIconType) class WebExIcon
    paramtype 1 var cIconName as character
    paramtype 2 var cIconType as character optional default "bootstrap"
    _Super:New("i")
    ::SetIconType(cIconType)
    ::SetIcon(cIconName,cIconType)
    ::EnableIcons()
return(self)

method SetIconType(cIconType) class WebExIcon
    ::cIconType:=Lower(AllTrim(cIconType))
return(self)

method SetIcon(cIconName,cIconType) class WebExIcon

    paramtype 1 var cIconName as character
    paramtype 2 var cIconType as character optional default ::cIconType

    cIconType:=Lower(cIconType)

    // Remove classes anteriores
    if (::cIconType!=cIconType)
        do case
        case (::cIconType=="bootstrap")
            ::DelClass("bi")
            ::DelClass(::cIconName)
        case (::cIconType=="material")
            ::DelClass("material-icons")
        case (::cIconType=="fontawesome")
            ::DelClass("fa")
            ::DelClass(::cIconName)
        endcase
        ::cIconType:=cIconType
    endif

    ::cIconName:=cIconName

    // Adiciona classes novas conforme tipo
    do case
    case (::cIconType=="bootstrap")
        ::AddClass("bi")
        ::AddClass(::cIconName)
    case (::cIconType=="material")
        ::AddClass("material-icons")
        ::SetContent(::cIconName)
    case (::cIconType=="fontawesome")
        ::AddClass("fa")
        ::AddClass(::cIconName)
    endcase

return(self)

method SetSize(cIconSize) class WebExIcon
    paramtype 1 var cIconSize as character
    if (::cIconType=="bootstrap")
        ::AddClass("fs-"+cIconSize)
    elseif (::cIconType=="fontawesome")
        // aceita 1x, 2x, 3x ate 10x (validar antes?)
        ::AddClass("fa-"+cIconSize)
    elseif (::cIconType=="material")
        ::AddClass("md-"+cIconSize)
    endif
return(self)
