/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

#include "totvs.ch"
#include "dbstruct.ch"
#include "parmtype.ch"
#include "tlpp-core.th"

class WebExTemplateBulkActionTable from WebExControl

    public data cTitle

    public data jColumns as json
    public data jItems as json

    public method New(cTitle as character) as object

    public method FromSQL(cSQL as character) as object
    public method ToHtml() as character

endclass

method New(cTitle) class WebExTemplateBulkActionTable
    paramtype 1 var cTitle as character optional default ""
    _Super:New()
    ::cTitle:=cTitle
    ::jColumns:=JSONObject():New()
    ::jItems:=JSONObject():New()
return(self)

method FromSQL(cSQL) class WebExTemplateBulkActionTable

    local aCols:={} as array
    local aData:={} as array
    local aColumns as array

    local cLabel as character
    local cProperty as character
    local cTmpAlias as character

    local i as numeric
    local nColumns as numeric

    cQuery:="%"+cSQL+"%"

    cTmpAlias:=GetNextAlias()
    beginSQL alias cTmpAlias
        SELECT t.* FROM (
            %exp:cQuery%
        ) t
         WHERE 1=0
    endSQL

    aColumns:=(cTmpAlias)->(dbStruct())
    (cTmpAlias)->(dbCloseArea())
    nColumns:=Len(aColumns)

    TCSQLToArr(cSQL,@aData,nil,aColumns,aColumns)

    for i:=1 to nColumns
        cProperty:=aColumns[i][DBS_NAME]
        cLabel:=GetSX3Cache(aColumns[i][DBS_NAME],"X3_TITULO")
        if (Empty(cLabel))
            cLabel:=cProperty
        else
            cLabe:=AllTrim(cLabel)
        endif
        aAdd(aCols,{"property":cProperty,"label":cLabel})
    next i

    FWFreeArray(@aColumns)

    ::jColumns:Set(aCols)
    ::jItems:Set(aData)

return(self)

method ToHtml() class WebExTemplateBulkActionTable

    local cHTML:="" as character
    local cScript as character

    local i as numeric
    local j as numeric

    local oObj as object

    WITH WEBEXOBJECT oObj CLASS WebExControl TYPE div
        .:SetAttr("class","container bg-white text-dark rounded shadow p-3")
        if (!Empty(::cTitle))
            WITH WEBEXOBJECT CLASS WebExControl TYPE h3
                .:SetAttr("class","mb-3")
                .:SetContent(::cTitle)
            END WEBEXOBJECT
        endif
        WITH WEBEXOBJECT CLASS WebExControl TYPE div
            .:SetAttr("class","table-responsive")
            WITH WEBEXOBJECT CLASS WebExControl TYPE table
                .:SetAttr("class","table table-hover po-table po-striped")
                // Cabecalho
                WITH WEBEXOBJECT CLASS WebExControl TYPE thead
                    .:SetAttr("class","table-light")
                    WITH WEBEXOBJECT CLASS WebExControl TYPE tr
                        WITH WEBEXOBJECT CLASS WebExControl TYPE th
                            .:SetAttr("class","table-light")
                            WITH WEBEXOBJECT CLASS WebExControl TYPE input
                                .:SetAttr("type","checkbox")
                                .:SetAttr("onclick","toggleAll(this)")
                            END WEBEXOBJECT
                            for i:=1 To Len(::jColumns)
                                WITH WEBEXOBJECT CLASS WebExControl TYPE th
                                    .:SetAttr("name",::jColumns[i]["property"])
                                    .:SetContent(::jColumns[i]["label"])
                                END WEBEXOBJECT
                            next i
                            WITH WEBEXOBJECT CLASS WebExControl TYPE th
                                .:SetContent("A&ccdil;&atilde;o")
                            END WEBEXOBJECT
                        END WEBEXOBJECT
                    END WEBEXOBJECT
                END WEBEXOBJECT
                // Corpo
                WITH WEBEXOBJECT CLASS WebExControl TYPE tbody
                    for i:=1 to Len(::jItems)
                        WITH WEBEXOBJECT CLASS WebExControl TYPE tr
                            WITH WEBEXOBJECT CLASS WebExControl TYPE td
                                WITH WEBEXOBJECT CLASS WebExControl TYPE input
                                    .:SetAttr("type","checkbox")
                                    .:SetAttr("class","row-select")
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                            for j:=1 To Len(::jColumns)
                                WITH WEBEXOBJECT CLASS WebExControl TYPE td
                                    .:SetContent(cValToChar(::jItems[i][j]))
                                END WEBEXOBJECT
                            next j
                            WITH WEBEXOBJECT CLASS WebExControl TYPE td
                                WITH WEBEXOBJECT CLASS WebExControl TYPE button
                                    .:SetAttr("class","btn btn-sm btn-danger")
                                    .:SetAttr("data-bs-toggle","modal")
                                    .:SetAttr("data-bs-target","#confirmModal")
                                    .:SetAttr("onclick","setRowToDelete(this)")
                                    .:SetContent("Excluir")
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                        END WEBEXOBJECT
                    next i
                END WEBEXOBJECT
            END WEBEXOBJECT
        END WEBEXOBJECT
        cHTML+=oObj:ToHTML()
    END WEBEXOBJECT

    FreeObj(@oObj)

    // Modal + JS
    WITH WEBEXOBJECT oObj CLASS WebExControl TYPE div
        .:SetAttr("id","confirmModal")
        .:SetAttr("class","modal fade")
        .:SetAttr("tabindex","-1")
        .:SetAttr("aria-hidden","true")
        WITH WEBEXOBJECT CLASS WebExControl TYPE div
            .:SetAttr("class","modal-dialog")
            WITH WEBEXOBJECT CLASS WebExControl TYPE div
                .:SetAttr("class","modal-content bg-light text-dark")
                WITH WEBEXOBJECT CLASS WebExControl TYPE div
                    .:SetAttr("class","modal-header")
                    WITH WEBEXOBJECT CLASS WebExControl TYPE h5
                        .:SetAttr("class","modal-title")
                        .:SetContent("Confirma&ccedil;&atilde;o")
                    END WEBEXOBJECT
                    WITH WEBEXOBJECT CLASS WebExControl TYPE button
                        .:SetAttr("class","btn-close")
                        .:SetAttr("data-bs-dismiss","modal")
                        .:SetAttr("aria-label","Fechar")
                    END WEBEXOBJECT
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE div
                    .:SetAttr("class","modal-body text-dark")
                    .:SetContent("Deseja realmente excluir esta linha?")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE div
                    .:SetAttr("class","modal-footer")
                    WITH WEBEXOBJECT CLASS WebExControl TYPE button
                        .:SetAttr("class","btn btn-secondary")
                        .:SetAttr("data-bs-dismiss","modal")
                        .:SetContent("Cancelar")
                    END WEBEXOBJECT
                    WITH WEBEXOBJECT CLASS WebExControl TYPE button
                        .:SetAttr("type","button")
                        .:SetAttr("class","btn btn-danger")
                        .:SetAttr("onclick","confirmDelete()")
                        .:SetContent("Excluir")
                    END WEBEXOBJECT
                END WEBEXOBJECT
            END WEBEXOBJECT
        END WEBEXOBJECT
        cHTML+=oObj:ToHTML()
    END WEBEXOBJECT

    FreeObj(@oObj)

    WITH WEBEXOBJECT oObj CLASS WebExControl TYPE script
        beginContent var cScript
            let rowToDelete = null;
            function setRowToDelete(button) {
            rowToDelete = button.closest("tr");
            }
            function confirmDelete() {
            if (rowToDelete) {
                rowToDelete.remove();
                rowToDelete = null;
            }
            const modal = bootstrap.Modal.getInstance(document.getElementById("confirmModal"));
            modal.hide();
            }
            function toggleAll(masterCheckbox) {
            const checkboxes = document.querySelectorAll(".row-select");
            checkboxes.forEach(cb => cb.checked = masterCheckbox.checked);
            }
        endContent
        .:SetContent(cScript)
        cHTML+=oObj:ToHTML()
    END WEBEXOBJECT

    FreeObj(@oObj)

return(cHtml)
