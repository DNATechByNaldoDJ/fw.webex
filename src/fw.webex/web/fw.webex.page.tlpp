/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

+-----> WebExPage
        +
        |
        +-----> WebExSideBar (com WebExNavSide ou WebExNavTop)
        |
        +-----> WebExMain
                +
                |
                +-----> WebExContainer
                        +
                        |
                        +-----> Conteudo

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

class WebExPage from WebExControl

    public data cTitle as character

    public data jStyle as json

    public method New(cTitle as character) as object
    public method AddStyle(cStyle) as object
    public method RenderHTML() as character

endclass

method New(cTitle) class WebExPage
    paramtype 1 var cTitle as character
    _Super:New("div")
    ::AddClass("main-div")
    ::cTitle:=cTitle
    ::jStyle:=JSONObject():New()
return(self)

method AddStyle(cStyle) class WebExPage
    local oStyle as object
    paramtype 1 var cStyle as character
    WITH WEBEXOBJECT oStyle CLASS WebExControl TYPE style
        .:SetContent(cStyle)
        ::jStyle[oStyle:cID]:=oStyle
    END WEBEXOBJECT
return(self)

method RenderHTML() class WebExPage

    local cHTML as character
    local cBody as character
    local cTheme as character
    local cStyle as character

    local jHeader as json

    local lIsDark as logical
    local lHasMain as logical

    local oPage as object
    local oHeader as object

    cHTML:="<!DOCTYPE html>"

    cBody:=_Super:RenderHTML()
    lHasMain:=("<main"$cBody)

    lIsDark:=WebApp():ThemeIsDark(@cTheme)

    if ((!lIsDark).and.(!Empty(cTheme)).and.(cTheme=="SUNSET").and.(Empty(::jStyle:GetNames())))

        beginContent var cStyle

            :root {
                --totvs-red: #c62828;
                --totvs-light-gray: #f4f4f4;
                --totvs-dark-gray: #dcdcdc;
                --totvs-border: #ccc;
                --totvs-text: #000;
                --totvs-highlight: #e0e0e0;
                --totvs-btn-bg: #ffffff;
            }

            body {
                background-color: var(--totvs-light-gray) !important;
                color: var(--totvs-text) !important;
                font-family: "Segoe UI", sans-serif !important;
            }

            .btn {
                background-color: var(--totvs-btn-bg) !important;
                color: var(--totvs-red) !important;
                border: 1px solid var(--totvs-red) !important;
                border-radius: 4px !important;
                font-weight: bold;
                padding: 6px 12px;
                transition: all 0.2s ease-in-out !important;
            }

            .btn:hover,
            .btn:focus {
                background-color: var(--totvs-red) !important;
                color: #fff !important;
            }

            .form-control,
            .form-select {
                background-color: #fff !important;
                color: var(--totvs-text) !important;
                border: 1px solid var(--totvs-border) !important;
                border-radius: 3px !important;
                padding: 5px 10px;
            }

            .form-control:focus,
            .form-select:focus {
                border-color: var(--totvs-red) !important;
                box-shadow: 0 0 3px rgba(198, 40, 40, 0.4) !important;
            }

            .card {
                border: 1px solid var(--totvs-border) !important;
                border-radius: 6px;
                padding: 15px;
                color: var(--totvs-text);
                box-shadow: 0 0 10px rgba(0,0,0,0.05);
            }

            .navbar {
                background-color: #fff !important;
                border-bottom: 2px solid var(--totvs-red) !important;
            }

            .navbar .nav-link,
            .navbar-brand {
                color: var(--totvs-text) !important;
            }

            .navbar .nav-link:hover {
                color: var(--totvs-red) !important;
            }

            .table {
                background-color: #fff !important;
                color: var(--totvs-text) !important;
                border: 1px solid var(--totvs-border);
            }

            .table thead {
                background-color: var(--totvs-dark-gray) !important;
                color: var(--totvs-text) !important;
            }

            .table-bordered,
            .table-bordered th,
            .table-bordered td {
                border: 1px solid var(--totvs-border) !important;
            }

            .table tbody tr:hover {
                background-color: var(--totvs-highlight) !important;
            }

            a {
                color: var(--totvs-red) !important;
                text-decoration: none;
            }

            a:hover {
                text-decoration: underline;
            }

            input[type="checkbox"],
            input[type="radio"] {
                accent-color: var(--totvs-red) !important;
            }

        endContent

        ::AddStyle(cStyle)

    endif

    WITH WEBEXOBJECT oPage CLASS WebExControl TYPE html
        .:SetAttr("lang","pt-br")
        if (lIsDark)
            .:SetAttr("data-bs-theme","dark")
        endif
        WITH WEBEXOBJECT oHeader CLASS WebExControl TYPE head
            WITH WEBEXOBJECT CLASS WebExControl TYPE meta
                .:SetAttr("charset","UTF-8")
            END WEBEXOBJECT
            WITH WEBEXOBJECT CLASS WebExControl TYPE meta
                .:SetAttr("application-name","FWWebEx")
            END WEBEXOBJECT
            WITH WEBEXOBJECT CLASS WebExControl TYPE meta
                .:SetAttr("name","viewport")
                .:SetAttr("content","width=device-width, initial-scale=1")
            END WEBEXOBJECT
***************************************************************************************************************************
            //PO UI CSS
                WITH WEBEXOBJECT CLASS WebExControl TYPE !--
                    .:SetContent("PO UI CSS")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE link
                    .:SetAttr("href","https://cdn.jsdelivr.net/npm/@po-ui/style/css/po-theme-default.min.css")
                    .:SetAttr("rel","stylesheet")
                END WEBEXOBJECT
            //PO UI CSS
***************************************************************************************************************************
            //Bootstrap CSS
                WITH WEBEXOBJECT CLASS WebExControl TYPE !--
                    .:SetContent("Bootstrap CSS")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE link
                    .:SetAttr("href","https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css")
                    .:SetAttr("rel","stylesheet")
                END WEBEXOBJECT
            //Bootstrap CSS
***************************************************************************************************************************
            //Bootstrap Optional JavaScript
                WITH WEBEXOBJECT CLASS WebExControl TYPE !--
                    .:SetContent("Optional JavaScript")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE !--
                    .:SetContent("jQuery first, then Popper.js, then Bootstrap JS")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE script
                    .:SetAttr("src","https://releases.jquery.com/git/jquery-git.slim.min.js")
                    .:SetAttr("defer")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE script
                    .:SetAttr("src","https://releases.jquery.com/git/jquery-git.min.js")
                    .:SetAttr("defer")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE script
                    .:SetAttr("src","https://cdn.jsdelivr.net/npm/@popperjs/core/dist/umd/popper.min.js")
                    .:SetAttr("defer")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE script
                    .:SetAttr("src","https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.min.js")
                    .:SetAttr("defer")
                END WEBEXOBJECT
            //Bootstrap Optional JavaScript
***************************************************************************************************************************
            //Custom Header
            jHeader:=oHeader:GetHeader()
            aEval(jHeader:GetNames(),{|cName|oHeader:AddChild(jHeader[cName])})
***************************************************************************************************************************
            //Styles
            aEval(::jStyle:GetNames(),{|cName|oHeader:AddChild(::jStyle[cName])})
***************************************************************************************************************************
            //Title
            WITH WEBEXOBJECT CLASS WebExControl TYPE title
                .:SetContent(::cTitle)
            END WEBEXOBJECT
***************************************************************************************************************************
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExControl TYPE body
            .:SetAttr("class","p-4")
            if (!lHasMain)
                WITH WEBEXOBJECT CLASS WebExMain ARGS .T.
                    .:SetContent(cBody)
                END WEBEXOBJECT
            else
                .:SetContent(cBody)
            endif
        END WEBEXOBJECT
        cHTML+=oPage:RenderHTML()
    END WEBEXOBJECT

    FreeObj(@oPage)

return(cHTML)
