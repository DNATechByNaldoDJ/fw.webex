/*
                _  _          _
 ___ __      __(_)| |_   ___ | |__
/ __|\ \ /\ / /| || __| / __|| '_ \
\__ \ \ V  V / | || |_ | (__ | | | |
|___/  \_/\_/  |_| \__| \___||_| |_|

Switch - Emulation of switch/case logic for TL++

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "totvs.ch"
#include "parmtype.ch"

class Switch

    private data xKey as variant
    private data jHCases as json
    private data bDefault as codeblock

    public method New(xKey as variant) as object
    public method AddCase(xMatch as variant,bAction as codeblock) as object
    public method SetDefault(bDefault as codeblock) as object
    public method Eval() as variant

endclass

method New(xKey) class Switch
   ::xKey:=xKey
   ::jHCases:=JSONObject():New()
return self

method AddCase(xMatch,bAction) class Switch
    ::jHCases[xMatch]:=bAction
return self

method SetDefault(bDefault) class Switch
    paramtype 1 var bDefault as block
    ::bDefault:=bDefault
return self

method Eval() class Switch
    local bExec:=if(::jHCases:HasProperty(::xKey),::jHCases[::xKey],::bDefault) as codeblock
    if (bExec!=nil)
        Eval(bExec)
    endif
return

********************************************************************************************************
procedure u_SwitchTst()

    local cProcName:=ProcName() as character
    local oSwitch as object

    oSwitch:=Switch():New("B")
    oSwitch:AddCase("A",{|| MsgInfo("&Eacute; A",cProcName) })
    oSwitch:AddCase("B",{|| MsgInfo("&Eacute; B",cProcName) })
    oSwitch:SetDefault({|| MsgInfo("Desconhecido",cProcName) })
    oSwitch:Eval()

    FreeObj(@oSwitch)

    oSwitch:=Switch():New("A")
    oSwitch:AddCase("A",{|| MsgInfo("&Eacute; A",cProcName) })
    oSwitch:AddCase("B",{|| MsgInfo("&Eacute; B",cProcName) })
    oSwitch:SetDefault({|| MsgInfo("Desconhecido",cProcName) })
    oSwitch:Eval()

    FreeObj(@oSwitch)

    oSwitch:=Switch():New("A")
    oSwitch:SetDefault({|| MsgInfo("Desconhecido",cProcName) })
    oSwitch:Eval()

    FreeObj(@oSwitch)

return
