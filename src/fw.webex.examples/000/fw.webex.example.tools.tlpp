/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

#include "shell.ch"

class FWExampleTools
    static method Execute(bExecute as codeblock,cTitle as character,lPrepareEnvironment as logical) as variant
    static method HtmlFileShow(cHTML as character,cTitle as character,cHTMLFile as character) as variant
    static method GetRESTCredential(cUSR as character,cPDW as character,cRESTURL as character) as logical
endclass

static method Execute(bExecute,cTitle,lPrepareEnvironment) class FWExampleTools

    local lMainWnd as logical

    local oMainBmp as object
    local oMainPanel as object

    paramtype 1 var bExecute as block
    paramtype 2 var cTitle as character optional default ProcName(1)
    paramtype 3 var lPrepareEnvironment as logical optional default .F.

    private lRedefineBottom as logical

    lMainWnd:=(Type("oMainWnd")=="O")
    if (!lMainWnd)
        if (lPrepareEnvironment)
            FWMsgRun(nil,{||RPCSetEnv("99","01",GetEnvServer())},"Wait...","Preparing environment")
        endif
            private oMainWnd as object
            lRedefineBottom:=.T.
            DEFINE WINDOW oMainWnd FROM 00,00 TO 1024,768 TITLE cTitle
                @ 000,000 MSPANEL oMainPanel OF oMainWnd
                oMainPanel:Align:=CONTROL_ALIGN_ALLCLIENT
                @ 000,000 BITMAP oMainBmp RESNAME "DNA_TECH_LOGO_BLACK_PANTER" SIZE 1024,1024 BORDER OF oMainPanel PIXEL
                oMainBmp:Align:=CONTROL_ALIGN_ALLCLIENT
                oMainBmp:SetCSS("{background-size: 100% 100%;}")
            ACTIVATE WINDOW oMainWnd MAXIMIZED ON INIT (Eval(bExecute),oMainWnd:End())
            FreeObj(@oMainBmp)
            FreeObj(@oMainPanel)
            FreeObj(@oMainWnd)
        if (lPrepareEnvironment)
            RPCClearEnv()
        endif
    else
        lRedefineBottom:=.F.
        Eval(bExecute)
    endif

return

static method HtmlFileShow(cHTML,cTitle,cHTMLFile) class FWExampleTools

    local aButtons as array

    local bErrorBlock as codeblock

    local cHTMLFileTmpFile as character
    local cHTMLFileServer as character
    local cHTMLFileNavigate as character

    local cSPPDrive as character
    local cSPPPath as character
    local cSPPFile as character
    local cSPPExt as character

    local jButtons as json

    local lAbrir as logical
    local lIsDark:=WebApp():ThemeIsDark() as logical
    local lHasTheme as logical

    local nTop as numeric
    local nLeft as numeric
    local nBottom as numeric
    local nRight as numeric

    local oDlg as object
    local oGrp as object

    local oError as object
    local oTheme as object

    local oTWebEngine as object
    local oTWebChannel as object

    local oFWDefSize as object

    paramtype 1 var cHTML as character
    paramtype 2 var cTitle as character
    paramtype 3 var cHTMLFile as character

    begin sequence

        jButtons:=JSONObject():New()

        aButtons:=array(0)
        aAdd(aButtons,{"&Sair",{||oDlg:End()},OemToAnsi("Sair"),OemtoAnsi("Sair")})
        aAdd(aButtons,{"&Print",{||oTWebEngine:Print()},OemToAnsi("Print"),OemtoAnsi("Print")})
        aAdd(aButtons,{"Print PD&F",{||oTWebEngine:PrintPDF()},OemToAnsi("Print PDF"),OemtoAnsi("Print PDF")})

        lAbrir:=file(cHTMLFile)

        if (lAbrir)
            if (WebApp():WebAgentIsConnected())
                bErrorBlock:=ErrorBlock({|oError|Break(oError)})
                begin sequence
                    //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                    cHTMLFileNavigate:=CpyF2Web(cHTMLFile,.T.,.T.,.F.,.F.)
                recover
                    begin sequence
                        //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                        cHTMLFileNavigate:=CpyF2Web(cHTMLFile,.F.,.T.,.F.,.F.)
                    end sequence
                end sequence
                ErrorBlock(bErrorBlock)
                if ((Empty(cHTMLFileNavigate)).and.(lIsDir("\web\tmp\")))
                    splitPath(cHTMLFile,@cSPPDrive,@cSPPPath,@cSPPFile,@cSPPExt)
                    cHTMLFileServer:="\web\tmp\"
                    cHTMLFileServer+=cSPPFile
                    cHTMLFileServer+=cSPPExt
                    cHTMLFileNavigate:=cHTMLFileServer
                    bErrorBlock:=ErrorBlock({|oError|Break(oError)})
                    begin sequence
                        //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                        cHTMLFileNavigate:=CpyF2Web(cHTMLFileNavigate,.T.,.T.,.F.,.F.)
                    recover
                        begin sequence
                            //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                            cHTMLFileNavigate:=CpyF2Web(cHTMLFileNavigate,.F.,.T.,.F.,.F.)
                        recover
                            cHTMLFileNavigate:=cHTMLFileServer
                        end sequence
                    end sequence
                    ErrorBlock(bErrorBlock)
                endif
                splitPath(cHTMLFile,@cSPPDrive,@cSPPPath,@cSPPFile,@cSPPExt)
                cHTMLFileTmpFile:=GetTempPath()
                cHTMLFileTmpFile+=cSPPFile
                cHTMLFileTmpFile+=cSPPExt
                __CopyFile(cHTMLFile,cHTMLFileTmpFile)
                aAdd(aButtons,{"&Abrir",{||ShellExecute("open",cHTMLFileTmpFile,"","",SW_SHOWMAXIMIZED)},OemToAnsi("Abir"),OemtoAnsi("Abir")})
            endif
        endif

        oFWDefSize:=FWDefSize():New(.F.,.F.)
        oFWDefSize:lLateral:=.F.
        oFWDefSize:AddObject("TWebEngine",100,95,.T.,.T.)
        oFWDefSize:AddObject("ButtonActions",100,05,.F.,.F.)

        oFWDefSize:Process()

        if (oFWDefSize:aWindSize[3]==0)
            nTop:=0
            nLeft:=0
            nBottom:=530
            nRight:=1330
        else
            nTop:=oFWDefSize:aWindSize[1]
            nLeft:=oFWDefSize:aWindSize[2]
            nBottom:=oFWDefSize:aWindSize[3]
            nRight:=oFWDefSize:aWindSize[4]
        endif

        if (lRedefineBottom)
            nBottom-=15
        endif

        DEFINE MSDIALOG oDlg TITLE cTitle FROM nTop,nLeft TO nBottom,nRight OF GetWndDefault() STATUS PIXEL

            if (oFWDefSize:aWindSize[3]>0)
                nTop:=oFWDefSize:GetDimension("TWebEngine","LININI")
                nLeft:=oFWDefSize:GetDimension("TWebEngine","COLINI")
                nBottom:=oFWDefSize:GetDimension("TWebEngine","LINEND")
                nRight:=oFWDefSize:GetDimension("TWebEngine","COLEND")
                nTop-=5
                nBottom+=1
                nRight-=5
                if (lRedefineBottom)
                    nBottom-=25
                endif
            endif

            oTWebChannel:=TWebChannel():New()
            oTWebChannel:Connect()

            oTWebEngine:=TWebEngine():New(oDlg,nTop,nLeft,nRight,nBottom,/*cURL*/,oTWebChannel:nPort)
            oTWebEngine:Align:=CONTROL_ALIGN_ALLCLIENT

            nTop:=oFWDefSize:GetDimension("ButtonActions","LININI")
            nBottom:=oFWDefSize:GetDimension("ButtonActions","LINEND")

            if (oFWDefSize:aWindSize[3]>0)
                if (lRedefineBottom)
                    nTop-=25
                    nBottom-=25
                endif
                nTop-=3
                nRight+=3
            endif

            if (lIsDark)
                @ nTop,03 GROUP oGrp TO nBottom+2,nRight PROMPT "" OF oDlg PIXEL
            else
                @ nTop,03 GROUP oGrp TO nBottom+2,nRight PROMPT "" OF oDlg COLOR 0,16777215 PIXEL
            endif

            nTop+=15
            nRight+=5

            try
                oTheme:=totvs.framework.css.ProtheusTheme():New()
                lHasTheme:=.T.
            catch oError
                lHasTheme:=.F.
                FreeObj(@oError)
            endtry

            //Botoes (da direita pra a esquerda)
            @ nTop,(nRight)-((50*1)+06) BUTTON jButtons["1"] PROMPT aButtons[1][1] SIZE 50,08 OF oGrp ACTION Eval(aButtons[1][2]) PIXEL
            if (lHasTheme)
                jButtons["1"]:SetCSS(oTheme:getPrimaryButtonCSS())
            endif
            @ nTop,(nRight)-((50*2)+09) BUTTON jButtons["2"] PROMPT aButtons[2][1] SIZE 50,08 OF oGrp ACTION Eval(aButtons[2][2]) PIXEL
            if (lHasTheme)
                jButtons["2"]:SetCSS(oTheme:getPrimaryButtonCSS())
            endif
            @ nTop,(nRight)-((50*3)+12) BUTTON jButtons["3"] PROMPT aButtons[3][1] SIZE 50,08 OF oGrp ACTION Eval(aButtons[3][2]) PIXEL
            if (lHasTheme)
                jButtons["3"]:SetCSS(oTheme:getPrimaryButtonCSS())
            endif
            if (lAbrir)
                @ nTop,(nRight)-((50*4)+15) BUTTON jButtons["4"] PROMPT aButtons[4][1] SIZE 50,08 OF oGrp ACTION Eval(aButtons[4][2]) PIXEL
                if (lHasTheme)
                    jButtons["4"]:SetCSS(oTheme:getPrimaryButtonCSS())
                endif
            endif

            oDlg:lEscClose:=.F.

            oTWebEngine:Navigate(cHTMLFileNavigate)

            oDlg:lCentered:=(!lRedefineBottom)

        ACTIVATE MSDIALOG oDlg

        if (valType(oTWebChannel)=="O")
            oTWebChannel:Disconnect()
        endif

        if ((!Empty(cHTMLFile)).and.(File(cHTMLFile)))
            fErase(cHTMLFile)
        endif

        if ((!Empty(cHTMLFileNavigate)).and.(File(cHTMLFileNavigate)))
            fErase(cHTMLFileNavigate)
        endif

        if ((!Empty(cHTMLFileServer)).and.(File(cHTMLFileServer)))
            fErase(cHTMLFileServer)
        endif

        if ((!Empty(cHTMLFileTmpFile)).and.(File(cHTMLFileTmpFile)))
            fErase(cHTMLFileTmpFile)
        endif

    end sequence

    FWFreeArray(@aButtons)

    FreeObj(@oGrp)
    FreeObj(@oDlg)
    FreeObj(@oTheme)
    FreeObj(@jButtons)
    FreeObj(@oFWDefSize)

    FreeObj(@oTWebEngine)
    FreeObj(@oTWebChannel)

    DelClassIntF()

return

static method GetRESTCredential(cUSR,cPDW,cRESTURL) class FWExampleTools

    local aParamBox:=Array(0) as array
    local aParamRet:=Array(0) as array

    local lGetRESTCredential as logical

    paramtype 1 var cUSR as character optional default "admin"
    paramtype 2 var cPDW as character optional default "admin"
    paramtype 3 var cRESTURL as character optional default "https://"+GetServerIP()+":"+LTrim(Str(GetServerPort()))+"/app-root/"

    if (Empty(cUSR))
        cUSR:="admin"
    endif
    cUSR:=PadR(cUSR,100)
    if (Empty(cPDW))
        cPDW:="admin"
    endif
    cPDW:=PadR(cPDW,100)
    if (Empty(cRESTURL))
        cRESTURL:="https://"+GetServerIP()+":"+LTrim(Str(GetServerPort()))+"/app-root/"
    endif
    cRESTURL:=PadR(cRESTURL,200)

    aAdd(aParamBox,{1,"Usuario",cUSR,"@","NaoVazio()","","AllWaysTrue()",100,.T.})
    aAdd(aParamBox,{1,"Senha",cPDW,"@","NaoVazio()","","AllWaysTrue()",100,.T.})
    aAdd(aParamBox,{1,"URL REST",cRESTURL,"@","NaoVazio()","","AllWaysTrue()",200,.T.})

    begin sequence

        lGetRESTCredential:=ParamBox(@aParamBox,"Selecione os Parametros",@aParamRet,nil,nil,.T.,nil,nil,nil,nil,.T.,.T.)

        if (!lGetRESTCredential)
            break
        endif

        cUSR:=AllTrim(aParamRet[1])
        cPDW:=AllTrim(aParamRet[2])
        cRESTURL:=AllTrim(aParamRet[3])
        if (Right(cRESTURL,1)!="/")
            cRESTURL+="/"
        endif

    end sequence

    FWFreeArray(@aParamBox)
    FWFreeArray(@aParamRet)

return(lGetRESTCredential)
