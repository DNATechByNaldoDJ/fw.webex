/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "fw.webex.th"

using namespace FWWebEx

procedure u_FWWebExExample_006()
    FWExampleTools():Execute({||FWWebExExample_006()},ProcName(),.F.)
return

static procedure FWWebExExample_006()

    local cHTML as character
    local cHTMLFile as character

    local cScript as character
    local cProcName:=ProcName() as character

    local oScript as object
    local oDivTable as object
    local oTableStyle as object

    local oFWWebExPage as object
    local oFWWebExForm as object
    local oFWWebExButton as object

    beginContent var cTableStyle
        table.dataTable.compact tbody td {
            padding: 4px 8px !important;
        }
    endContent
    oTableStyle:=WebExControl():New("style")
    oTableStyle:SetContent(cTableStyle)

    oFWWebExPage:=WebExPage():New("Exemplo 006 - ViaCEP em DataTable")
    oFWWebExPage:AddChild(oTableStyle)

    //Campo para a Pesquisa do CEP
    oFWWebExForm:=WebExForm():New("Buscar CEP")
    oFWWebExForm:AddField("CEP","cep","text","Digite o CEP")

    oFWWebExButton:=WebExButton():New("Buscar")
    oFWWebExButton:SetAttr("onclick","buscarCEP(); return false;")
    oFWWebExForm:AddChild(oFWWebExButton)

    // Tabela que sera preenchida
    oFWWebExPage:AddChild(oFWWebExForm)

    oDivTable:=WebExControl():New("div")
    oDivTable:SetAttr("id","tableResult")
    oFWWebExPage:AddChild(oDivTable)

    // Script para requisitar ViaCEP e preencher a tabela com DataTables
    //Portuguese-Brasil translation
    //https://datatables.net/plug-ins/i18n/Portuguese-Brasil.html
    /*
        Tabela do DOM (so pra referencia)
        https://datatables.net/reference/option/dom
        | Letra | Elemento que aparece           |
        | ----- | ------------------------------ |
        | **B** | Botoes (exportacao etc.)       |
        | **l** | Seletor de "linhas por pagina" |
        | **f** | Campo de busca (filtro)        |
        | **r** | Texto "processing..."          |
        | **t** | Tabela                         |
        | **i** | Info de "Mostrando x a y de z" |
        | **p** | Paginacao                      |
    */
    beginContent var cScript
        function buscarCEP() {
            const cep = document.getElementsByName('cep')[0].value.replace(/[^0-9]/g,'');
            if (cep.length !== 8) {
                document.getElementById('tableResult').innerHTML = '<div class=\"alert alert-danger\">CEP inv&aacute;lido.</div>';
                return;
            }
            fetch('https://viacep.com.br/ws/' + cep + '/json/')
                .then(response => response.json())
                .then(data => {
                    if (data.erro) {
                        document.getElementById('tableResult').innerHTML = '<div class=\"alert alert-danger\">CEP n&atilde;o encontrado.</div>';
                    } else {
                        let html = '<table id=\"example\" class=\"table table-striped table-hover mt-3 display compact nowrap\">';
                        html += '<thead><tr><th>Campo</th><th>Valor</th></tr></thead><tbody>';
                        for (let key in data) {
                            html += '<tr><td><strong>' + key + '</strong></td><td>' + data[key] + '</td></tr>';
                        }
                        html += '</tbody></table>';
                        document.getElementById('tableResult').innerHTML = html;
                        var table = new DataTable('#example', {
                            dom: 'Blfrtip',
                            lengthMenu: [1,2,3,4,5,6,7,8,9,10,25,50,100,-1],
                            pageLength: 6,//DEFAULT
                            buttons: [
                                'copy',
                                'csv',
                                'print',
                                {
                                    extend: 'excelHtml5',
                                    title: 'u_FWWebExExample_006',
                                    filename: 'relatorio_excel',
                                    autoFilter: true
                                },
                                {
                                    extend: 'pdf',
                                    title: 'u_FWWebExExample_006',
                                    filename: 'relatorio_pdf'
                                }
                            ],
                            responsive: true,
                            className: 'compact',
                            language: {
                                url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/pt-BR.json',
                                lengthLabels: {
                                    '-1': 'Todos' //https://datatables.net/reference/option/lengthMenu
                                }
                            },
                            "drawCallback": function(settings) {
                                // This drawCallback ensures consistent table height across pages.
                                // It calculates how many empty rows are needed to fill the remaining space,
                                // and appends them to the table so all pages have the same visual height.
                                const api = this.api();
                                const rows = api.rows({ page: 'current' }).count();
                                const pageSize = api.page.len();
                                const emptyRows = pageSize - rows;
                                for (let i = 0; i < emptyRows; i++) {
                                    $('#example tbody').append('<tr class="empty-row"><td colspan="999">&nbsp;</td></tr>');
                                }
                            }
                        });
                    }
                })
                .catch(() => {
                document.getElementById('tableResult').innerHTML = '<div class=\"alert alert-danger\">Erro ao consultar o CEP.</div>';
            });
        }
    endContent

    oScript:=WebExControl():New("script")
    oScript:SetContent(cScript)

    oFWWebExPage:AddChild(oScript)
    oFWWebExPage:EnableDataTable()

    cHTML:=oFWWebExPage:RenderHTML()
    oFWWebExPage:Clean()

    FreeObj(@oFWWebExPage)
    FreeObj(@oFWWebExForm)
    FreeObj(@oFWWebExButton)
    FreeObj(@oScript)
    FreeObj(@oDivTable)
    FreeObj(@oTableStyle)

    cHTML:=EncodeUTF8(cHTML)
    if (!lIsDir("\web\tmp\"))
        FWMakeDir("\web\tmp\",.F.)
    endif
    cHTMLFile:="\web\tmp\"+Lower(cProcName)+".html"
    MemoWrite(cHTMLFile,cHTML)

    FWExampleTools():htmlFileShow(cHTML,cProcName,cHTMLFile)

    fErase(cHTMLFile)

return
