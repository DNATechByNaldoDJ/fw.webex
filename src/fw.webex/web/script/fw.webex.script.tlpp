/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

class WebExScript from WebExControl

    protected data cScriptSRC as character
    protected data lScriptUseAddChild as logical
    protected data lScriptInPage as logical

    public method New(lScriptInPage as logical,lScriptUseAddChild as logical) as object
    public method SetContent(cScriptSRC as character,lScriptAddScript as logical) as object

    public method GetSrtiptSRC() as character

    public method GetScriptInPage() as logical
    public method SetScriptInPage() as object

    public method GetScriptUseAddChild() as logical
    public method SetScriptUseAddChild() as object

endclass

method New(lScriptInPage,lScriptUseAddChild) class WebExScript
    paramtype 1 var lScriptInPage as logical optional default .T.
    paramtype 2 var lScriptUseAddChild as logical optional default (!lScriptInPage)
    ::lScriptInPage:=lScriptInPage
    ::lScriptUseAddChild:=lScriptUseAddChild
    _Super:New("script")
return(self)

method SetContent(cScriptSRC,lScriptAddScript) class WebExScript
    paramtype 1 var cScriptSRC as character
    paramtype 2 var lScriptAddScript as logical optional default .T.
    ::cScriptSRC:=cScriptSRC
    if (!::lScriptInPage)
        ::SetAttr("src",::cScriptSRC)
        ::SetAttr("defer")
    else
        _Super:SetContent(::cScriptSRC)
    endif
    if ((lScriptAddScript).and.(!::lScriptUseAddChild))
        ::AddScript(self)
    endif
return(self)

method GetSrtiptSRC() class WebExScript
return(::cScriptSRC)

method GetScriptInPage() class WebExScript
return(::lScriptInPage)

method SetScriptInPage(lScriptInPage) class WebExScript
    paramtype 1 var lScriptInPage as logical optional default .T.
    ::lScriptInPage:=lScriptInPage
return(self)

method GetScriptUseAddChild() class WebExScript
return(::lScriptUseAddChild)

method SetScriptUseAddChild(lScriptUseAddChild) class WebExScript
    paramtype 1 var lScriptUseAddChild as logical optional default (!::lScriptInPage)
    ::lScriptUseAddChild:=lScriptUseAddChild
return(self)
